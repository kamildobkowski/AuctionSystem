@using MudBlazor

<MudAppBar Elevation="1" Dense="true">
    <!-- Menu (mobile) -->
    <MudIconButton Icon="@Icons.Material.Filled.Menu" Edge="Edge.Start" Color="Color.Inherit"
                   OnClick="OnMenuClick" Class="md:hidden" />

    <!-- Logo -->
    <MudText Typo="Typo.h6" Class="font-semibold cursor-pointer" @onclick="@(()=>NavTo("/"))">
        AuctionSystem
    </MudText>

    <MudSpacer />

    <!-- Linki (desktop) -->
    <MudHidden Breakpoint="Breakpoint.MdAndDown">
        <MudStack Row="true" Spacing="2" AlignItems="AlignItems.Center">
            <MudNavLink Href="/" Match="NavLinkMatch.All">Strona główna</MudNavLink>
            <MudNavLink Href="/features">Funkcje</MudNavLink>
            <MudNavLink Href="/pricing">Cennik</MudNavLink>
            <MudNavLink Href="/contact">Kontakt</MudNavLink>
            <MudNavLink Href="/register">Rejestracja</MudNavLink>
        </MudStack>
    </MudHidden>

    <!-- Dark / Light -->
    <MudIconButton Color="Color.Inherit"
                   Icon="@(_dark ? Icons.Material.Filled.DarkMode : Icons.Material.Filled.LightMode)"
                   AriaLabel="Przełącz motyw"
                   @onclick="@(()=> DarkChanged.InvokeAsync(!_dark))"
                   Class="ml-2" />

    <!-- Menu użytkownika -->
    <MudMenu AnchorOrigin="Origin.TopRight" TransformOrigin="Origin.TopRight" OffsetY="true">
        <ActivatorContent>
            <MudAvatar Icon="@Icons.Material.Filled.AccountCircle" Size="Size.Medium" Class="cursor-pointer" />
        </ActivatorContent>
        <ChildContent>
            <MudMenuItem @onclick="@(()=>NavTo("/profile"))">@Icons.Material.Filled.Person&nbsp; Profil</MudMenuItem>
            <MudMenuItem @onclick="@(()=>NavTo("/settings"))">@Icons.Material.Filled.Settings&nbsp; Ustawienia</MudMenuItem>
            <MudDivider />
            <MudMenuItem Color="Color.Error" @onclick="Logout">@Icons.Material.Filled.Logout&nbsp; Wyloguj</MudMenuItem>
        </ChildContent>
    </MudMenu>
</MudAppBar>

@code {
    [Parameter] public EventCallback OnMenuClick { get; set; }
    [Parameter] public bool Dark { get => _dark; set => _dark = value; }
    [Parameter] public EventCallback<bool> DarkChanged { get; set; }

    private string _search = string.Empty;
    private bool _dark;

    [Inject] NavigationManager Nav { get; set; } = default!;
    private void NavTo(string href) => Nav.NavigateTo(href);
    private Task Logout() => Task.CompletedTask; // TODO
}