services:
  auction_sql_db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-defaultuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-defaultpass}
      POSTGRES_DB: ${POSTGRES_DB:-defaultdb}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: "2181"
      ZOOKEEPER_TICK_TIME: "2000"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: "1"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DEFAULT_REPLICATION_FACTOR: "1"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_LISTENERS: "INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://${KAFKA_HOST:-kafka}:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    restart: always
    depends_on:
      - kafka
    ports:
      - "9090:9090"
    environment:
      SERVER_PORT: "9090"
      KAFKA_CLUSTERS_0_NAME: "eventbus"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:29092"

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
  
  minio:
    image: quay.io/minio/minio
    container_name: minio-server
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minio12345}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
      
  identity-api:
    build:
      context: .
      dockerfile: Services/Identity/Dockerfile
      network: host
    container_name: identity-api
    restart: always
    ports:
      - "6111:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    depends_on:
      - auction_sql_db
      - kafka
        
  auctions-api:
    build:
      context: .
      dockerfile: Services/Auctions/Dockerfile
      network: host
    container_name: auctions-api
    restart: always
    ports:
      - "6222:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    depends_on:
      - auction_sql_db
      - kafka
      - minio
    
  yarp-gateway:
    build:
      context: .
      dockerfile: Gateways/yarp/Dockerfile
      network: host
    container_name: yarp-gateway
    restart: always
    ports:
      - "4444:80"
    environment:
      ASPNETCORE_ENVIRONMENT: Development

volumes:
  db_data:
  minio_data: